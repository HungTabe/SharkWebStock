VD1: React + .NET Core Finance Project: App Overview + React Install
- Install react syntax
  + npm install create-react-app (without name because already inside name)
  + npx create-react-app frontend --template typescript
    (Name the front is 'frontend')

- Plain Jane Reactjs (Regular reactjs)
  + tsconfig.json is control panel for your FE app
  + .tsx file is a jsx version
  + stick to .tsx to min your errors

- Set ext Snippets ES6 on VS (Every Project - Every Installation)
  + JSX - rafce / TSX - tsrafce

VD2: React Typescript 2023 - 2. JSX
- JSX is a Reactjs version of HTML
- Lỗi “Cannot be compiled under ‘–isolatedModules’ because it is 
  considered a global script file” xảy ra khi chúng ta có một tệp 
  trong dự án không chứa câu lệnh import hoặc export. Để khắc phục 
  lỗi này, bạn cần thêm một dòng export {} vào tệp để biến nó thành 
  một ES module1.
- Thuộc tính overflow trong CSS xác định điều gì sẽ xảy ra nếu một 
  thành phần box tràn nội dung.
- JSX <div> là smoke screen sau đó đó nó translate sang react React.CreateElement

VD3: React Typescript 2023 - 3. Props
- Dịch vụ ngân hàng ở mý : thì sẽ có 1 cái tube để giao tiếp tiền giữa Ginkoin vào
  user thì pros nó tương tự như tube đó , đa dạng hóa giá trị truyền để các component
  hiển thị 

- Phân biệt giữa Interface và Type trong khai Props
  
  [Type] 
  + Sử dụng từ khóa type để định nghĩa một kiểu dữ liệu.
    Nguyên thủy cũng như tùy chỉnh
    - Tùy chỉnh ví dụ như : 
      + Kiểu tuple 
      type Data = [number, string];
      + Kiểu union
      type Color = "blue" | "red" | "yellow" | "purple";

  [Interface]
  + Interface sử dụng định nghĩa một kiểu dữ liệu.
    Và mô tả cấu trúc của một đối tượng. Có thể extend
          interface Bear extends Animal {
          honey: boolean;
          }

  [KẾT LUẬN]
  việc sử dụng type hay interface phụ thuộc vào yêu cầu cụ 
  thể trong dự án của bạn. Nếu bạn cần định nghĩa kiểu dữ 
  liệu nguyên thủy hoặc union, hãy sử dụng type. 
  Nếu bạn muốn mô tả cấu trúc của đối tượng, hãy sử dụng interface

- Ở Card.tsx ta có khai báo interfce đối tượng, thì ta phải trang bị
  cho tụi nó các props đã khai ở interface
  const Card = ({ companyName, ticker, price }: Props) => {}
  Và ở trang sử dụng cái component Card cũng phải fill các tham số
  
VD4: React Typescript 2023 - 4. Function Components
- FUnction is Object
- Because is Object we can type lize them from params to Function
- Hãy type cả function và return

+ Hãy đi sâu vào type function với React FC<Props>
  và có return type là JSX.Element 

+ Type function : FunctionName : React.FC<Props>
+ Type return : Sau cái Function Type hoặc Tên function thì
  : JSX.Element 

CHƯA HIỂU CON TYPE LẮM

VD5: React Typescript 2023 - 5. State

- Mô tả CRUD as Storing CHỨA and Manipulating Thao tác Data
- Và stage là cái Storing data trên 
- Specific rule for Reactjs State 
- React là các component được render và khi rerender thì phải 
  restore stage vì webpage có store đâu 
- Thế nên dùng predefine hook để utilize memory để lưu stage
- Cái hook đó được gọi là useState 

VD6: React Typescript 2023 - 6. Event Handlers
- Event là 1 đoạn code được thực thi khi bạn tương tác với button
  or page 
- Thay vì addEventListener vv với JS thì ReactJS có build sẵn addEventListener
  vào onChange luôn 
- type in an event ; TS là kiểm soát type
- 











